name: Make API Request to Terraform Cloud to reconcile module version with GitHub release

on:
  push:
    branches:
      - main

jobs:
  make-api-request:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get latest release version
        id: last_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ secrets.RELEASE_PLEASE_REPO_NEW }}
          view_top: 1

      - name: Setup Environment (PR)  
        if: ${{ github.event_name == 'pull_request' }}  
        shell: bash  
        run: |  
          echo "LAST_COMMIT_SHA=${{ github.event.pull_request.head.sha }}" >> ${GITHUB_ENV}  
      - name: Setup Environment (Push)  
        if: ${{ github.event_name == 'push' }}  
        shell: bash  
        run: |  
          echo "LAST_COMMIT_SHA=${GITHUB_SHA}" >> ${GITHUB_ENV}        
  
      - name: Show GitHub context Make API Request
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        id: api_request
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://app.terraform.io/api/v2/organizations/PersonalUseHL/registry-modules/private/PersonalUseHL/beta-feature/h2/versions'
          method: 'POST'
          bearerToken: ${{ secrets.RELEASE_PLEASE_REPO_NEW }}
          customHeaders: '{"Content-Type": "application/vnd.api+json"}'
          data: '{"type": "registry-module-versions", "attributes": { "version": ${{ steps.last_release.outputs.tag_name }}, "commit-sha": ${{ LAST_COMMIT_SHA }} }}'

      - name: Show API Response Status
        run: |
          echo "Response Status: ${{ steps.api_request.outputs.response-status }}"

      - name: Show API Response Data
        run: |
          echo "Response Data: ${{ steps.api_request.outputs.response-data }}"
